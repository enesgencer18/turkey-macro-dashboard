"CPI",
"CLI",
"Domestic_PPI",
"Inflation_Expectation",
"FS_Confidience",
"RS_Confidience",
"Production_Volume",
"Export_Orders",
"BoP",
"Utilization_Rate",
"Consumer_Confidience",
"Average_Import_Price"
)
df_list <- map(1:length(cb_series),
.f = ~Get_Cb_Data(Serie = cb_series[.x]))
df <- reduce(df_list, left_join, by = "Tarih")
colnames(df) <- col_names
usdtry <- getSymbols("USDTRY=X",
src ="yahoo",
auto.assign = FALSE) %>%
fortify() %>%
as_tibble()
df_list <- map(1:length(cb_series),
.f = ~Get_Cb_Data(Serie = cb_series[.x]))
df <- reduce(df_list, left_join, by = "Tarih")
colnames(df) <- col_names
usdtry <- getSymbols("USDTRY=X",
src ="yahoo",
auto.assign = FALSE) %>%
fortify() %>%
as_tibble()
df
rm(list = ls())
library(XML)
library(methods)
library(httr)
library(xts)
library(lubridate)
library(quantmod)
library(tidyverse)
source("~/turkey-macro-dashboard/functions/Get_Cb_Data.R")
cb_series <-c(
"TP.FG.J0",
"TP.CLI2.A02",
"TP.TUFE1YI.T1",
"TP.BEK.S01.E.U",
"TP.FHGE.S01",
"TP.GY1.N2.MA",
"TP.GY4.N2.MA",
"TP.GY7.N2.MA",
"TP.ODEAYRSUNUM6.Q1",
"TP.KKO.MA",
"TP.TG2.Y03",
"TP.DT.IT.FIY.D01.2010"
)
col_names <- c(
"Date",
"CPI",
"CLI",
"Domestic_PPI",
"Inflation_Expectation",
"FS_Confidience",
"RS_Confidience",
"Production_Volume",
"Export_Orders",
"BoP",
"Utilization_Rate",
"Consumer_Confidience",
"Average_Import_Price"
)
df_list <- map(1:length(cb_series),
.f = ~Get_Cb_Data(Serie = cb_series[.x]))
df <- reduce(df_list, left_join, by = "Tarih")
colnames(df) <- col_names
usdtry <- getSymbols("USDTRY=X",
src ="yahoo",
auto.assign = FALSE) %>%
fortify() %>%
as_tibble()
usdtry <- usdtry %>%
rename(Date = Index,
Usd_Try = "USDTRY=X.Adjusted") %>%
select(Date, Usd_Try) %>%
filter(Date >= "2013-01-01") %>%
mutate(year = year(Date)) %>%
mutate(month = month(Date)) %>%
mutate(day = day(Date)) %>%
group_by(year, month) %>%
filter(day == max(day)) %>%
mutate(Date = paste0(year(Date), "-", month(Date))) %>%
ungroup() %>%
select(Date, Usd_Try)
df <- df %>%
left_join(usdtry, by = "Date")
df <- df %>%
mutate(Date = as.Date(as.yearmon(Date, format = "%Y-%m")) + months(1) - days(1)) %>%
mutate_if(.predicate = is.character, .funs = as.numeric)
df
View(df)
library(flexdashboard)
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(plotly)
library(ggthemes)
library(RColorBrewer)
### Load Data
load("~/turkey-macro-dashboard/analysis/ml_data.Rdata")
### Load Data
load("~/turkey-macro-dashboard/analysis/ml_data.Rdata")
load("~/turkey-macro-dashboard/df.Rda")
lasso_preds
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point()
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point()+
geom_abline(intercept = 0, slope = 1, size = 0.5)
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point()+
geom_abline(intercept = 0, slope = 1, size = 0.5, type = "dashed")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point()+
geom_abline(intercept = 0, slope = 1, size = 0.5, linetype = "dashed")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point()+
geom_abline(intercept = 0, slope = 1, size = 0.3, linetype = "dashed")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point()+
geom_abline(intercept = 0, slope = 1, size = 0.3, linetype = "dashed", alpha - 0.8)
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point()+
geom_abline(intercept = 0, slope = 1, size = 0.3, linetype = "dashed", alpha = 0.8)
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point()+
geom_abline(intercept = 0, slope = 1, size = 0.3, linetype = "dashed", alpha = 0.8, color = "midnightblue")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0, slope = 1, size = 0.3, linetype = "dashed", alpha = 0.8, color = "midnightblue")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_clean()
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent, scales = "free")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)+
labs(x = "Model Prediction",
y = "True Value",
title = "One-month ahead inflation forecast",
caption = "Source: TCMB")
scatter_plot <- lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_pander()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)+
labs(x = "Model Prediction",
y = "True Value",
caption = "Source: TCMB")
scatter_plot
scatter_plot <- lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_calc()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)+
labs(x = "Model Prediction",
y = "True Value",
caption = "Source: TCMB")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_calc()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)+
labs(x = "Model Prediction",
y = "True Value",
caption = "Source: TCMB")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_par()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)+
labs(x = "Model Prediction",
y = "True Value",
caption = "Source: TCMB")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_economist_white()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)+
labs(x = "Model Prediction",
y = "True Value",
caption = "Source: TCMB")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)+
labs(x = "Model Prediction",
y = "True Value",
caption = "Source: TCMB")
library(RColorBrewer)
n <- 1
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col_vector
n <- 1
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue", color = col_vector)+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)+
labs(x = "Model Prediction",
y = "True Value",
caption = "Source: TCMB")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = col_vector)+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)+
labs(x = "Model Prediction",
y = "True Value",
caption = "Source: TCMB")
lasso_preds %>%
ggplot(aes(x = pred, y = CPI))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_abline(intercept = 0,
slope = 1,
size = 0.3,
linetype = "dashed",
alpha = 0.8,
color = "midnightblue")+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_continuous(labels = scales::percent)+
labs(x = "Model Prediction",
y = "True Value",
caption = "Source: TCMB")
lasso_preds
lasso_preds %>%
mutate(Residual = CPI - pred) %>%
ggplot(aes(x = Date, y = Residual))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_smooth()
lasso_preds %>%
mutate(Residual = CPI - pred) %>%
ggplot(aes(x = Date, y = Residual))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_ribbon(stat='smooth', method = "glm", se=TRUE, alpha=0.05) +
geom_line(stat='smooth', method = "glm", alpha=1, color = "steelblue")
lasso_preds %>%
mutate(Residual = CPI - pred) %>%
ggplot(aes(x = Date, y = Residual))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_ribbon(stat='smooth', se=TRUE, alpha=0.05) +
geom_line(stat='smooth', alpha=1, color = "steelblue")
lasso_preds %>%
mutate(Residual = CPI - pred) %>%
ggplot(aes(x = Date, y = Residual))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_ribbon(stat='smooth', se=TRUE, alpha=0.05) +
geom_line(stat='smooth', alpha=1, color = "steelblue")+
theme_classic() +
scale_color_manual(values = col_vector)+
labs(y = "Accuracy",
x = "Log Sample Size",
title = "")
lasso_preds %>%
mutate(Residual = CPI - pred) %>%
ggplot(aes(x = Date, y = Residual))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_ribbon(stat='smooth', se=TRUE, alpha=0.05) +
geom_line(stat='smooth', alpha=1, color = "steelblue")+
theme_classic() +
scale_color_manual(values = col_vector)+
labs(y = "Accuracy",
x = "Log Sample Size",
title = "")+
scale_y_continuous(labels = scales::percent)
lasso_preds %>%
mutate(Residual = CPI - pred) %>%
ggplot(aes(x = Date, y = Residual))+
geom_point(size = 2, alpha = 0.8, color = "darkred")+
geom_ribbon(stat='smooth', se=TRUE, alpha=0.05) +
geom_line(stat='smooth', alpha=1, color = "steelblue")+
theme_classic() +
scale_color_manual(values = col_vector)+
labs(y = "Residual",
x = "Date",
title = "")+
scale_y_continuous(labels = scales::percent)
lasso_preds %>%
mutate(Residual = CPI - pred) %>%
ggplot(aes(x = Date, y = Residual))+
geom_point(size = 2, alpha = 0.8, color = "steelblue")+
geom_ribbon(stat='smooth', se=TRUE, alpha=0.05) +
geom_line(stat='smooth', alpha=1, color = "darkred")+
theme_classic() +
scale_color_manual(values = col_vector)+
labs(y = "Residual",
x = "Date",
title = "")+
scale_y_continuous(labels = scales::percent)
inf_plot <- lasso_preds %>%
rename(Actual = CPI,
Forecasted = pred) %>%
gather(key = "Variable", value = "Value", Actual:Forecasted) %>%
ggplot(aes(x = Date, y = Value, color = Variable))+
geom_line(size = 0.8, alpha = 1, show.legend = FALSE)+
scale_color_economist()+
theme_calc()+
scale_y_continuous(labels = scales::percent)+
scale_x_date(date_breaks = "3 month", date_labels =  "%m %Y")+
labs(x = "Date",
y = "",
title = "",
caption = "Source: TCMB")+
theme(plot.title = element_text(face = "italic"))
ggplotly(inf_plot)
lasso_preds %>%
rename(Actual = CPI,
Forecasted = pred) %>%
gather(key = "Variable", value = "Value", Actual:Forecasted) %>%
ggplot(aes(x = Date, y = Value, color = Variable))+
geom_line(size = 0.8, alpha = 1, show.legend = FALSE)+
scale_color_continuous_tableau()+
theme_calc()+
scale_y_continuous(labels = scales::percent)+
scale_x_date(date_breaks = "3 month", date_labels =  "%m %Y")+
labs(x = "Date",
y = "",
title = "",
caption = "Source: TCMB")+
theme(plot.title = element_text(face = "italic"))
lasso_preds %>%
rename(Actual = CPI,
Forecasted = pred) %>%
gather(key = "Variable", value = "Value", Actual:Forecasted) %>%
ggplot(aes(x = Date, y = Value, color = Variable))+
geom_line(size = 0.8, alpha = 1, show.legend = FALSE)+
scale_color_tableau()+
theme_calc()+
scale_y_continuous(labels = scales::percent)+
scale_x_date(date_breaks = "3 month", date_labels =  "%m %Y")+
labs(x = "Date",
y = "",
title = "",
caption = "Source: TCMB")+
theme(plot.title = element_text(face = "italic"))
lasso_preds %>%
rename(Actual = CPI,
Forecasted = pred) %>%
gather(key = "Variable", value = "Value", Actual:Forecasted) %>%
ggplot(aes(x = Date, y = Value, color = Variable))+
geom_line(size = 0.8, alpha = 1, show.legend = FALSE)+
scale_color_tableau()+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_date(date_breaks = "3 month", date_labels =  "%m %Y")+
labs(x = "Date",
y = "",
title = "",
caption = "Source: TCMB")+
theme(plot.title = element_text(face = "italic"))
inf_plot <-lasso_preds %>%
rename(Actual = CPI,
Forecasted = pred) %>%
gather(key = "Variable", value = "Value", Actual:Forecasted) %>%
ggplot(aes(x = Date, y = Value, color = Variable))+
geom_line(size = 0.5, alpha = 1, show.legend = FALSE)+
scale_color_tableau()+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_date(date_breaks = "3 month", date_labels =  "%m %Y")+
labs(x = "Date",
y = "",
title = "",
caption = "Source: TCMB")+
theme(plot.title = element_text(face = "italic"))
ggplotly(inf_plot)
?linetype
inf_plot <-lasso_preds %>%
rename(Actual = CPI,
Forecasted = pred) %>%
gather(key = "Variable", value = "Value", Actual:Forecasted) %>%
ggplot(aes(x = Date, y = Value, color = Variable))+
geom_line(size = 0.5, alpha = 0.75, show.legend = FALSE)+
scale_color_tableau()+
theme_clean()+
scale_y_continuous(labels = scales::percent)+
scale_x_date(date_breaks = "3 month", date_labels =  "%m %Y")+
labs(x = "Date",
y = "",
title = "",
caption = "Source: TCMB")+
theme(plot.title = element_text(face = "italic"))
ggplotly(inf_plot)
