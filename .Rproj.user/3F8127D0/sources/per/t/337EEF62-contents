---
title: "Turkey Macroeconomic Dashboard"
output: 
  flexdashboard::flex_dashboard:
    theme: 
      version: 4
    orientation: rows
    vertical_layout: fill
---

```{r setup, include=FALSE}
library(tidyverse)
library(ggplot2)
library(plotly)
library(ggthemes)
library(RColorBrewer)
library(timetk)


```


```{r}
### Load Data
load("./analysis/ml_data.Rdata")
load("./raw_data/df.Rda")
load("./processed_data/processed_data.Rdata")
```

Inflation Model
================================

Row 
-----------------------------------------------------------------------
### One-month ahead inflation forecast

```{r}
inf_plot <-lasso_preds %>% 
  rename(Actual = CPI,
         Forecasted = pred) %>% 
  gather(key = "Variable", value = "Value", Actual:Forecasted) %>% 
  ggplot(aes(x = Date, y = Value, color = Variable))+
  geom_line(size = 0.5, alpha = 0.5, show.legend = FALSE)+
  geom_point(size = 0.75, alpha = 0.75, show.legend = FALSE)+
  scale_color_manual(values = c("steelblue4", "darkred"))+
  theme_pander()+
  scale_y_continuous(labels = scales::percent)+
  scale_x_date(breaks = seq(min(lasso_preds$Date),max(lasso_preds$Date),by="3 months"),
             date_labels = '%m/%y')+
  labs(x = "Date",
       y = "",
       title = "",
       caption = "Source: TCMB")+
  theme(plot.title = element_text(face = "italic"), legend.position = "bottom")
ggplotly(inf_plot)
```

Row 
-----------------------------------------------------------------------

### Scatter Plot - True Value & Prediction

```{r}
scatter <- lasso_preds %>% 
  ggplot(aes(x = pred, y = CPI))+
  geom_point(size = 1.5, alpha = 0.8, color = "darkred")+
  geom_abline(intercept = 0, 
              slope = 1, 
              size = 0.3, 
              linetype = 3, 
              alpha = 0.8, 
              color = "steelblue4")+
  theme_pander()+
  scale_y_continuous(labels = scales::percent)+
  scale_x_continuous(labels = scales::percent)+
  labs(x = "Model Prediction",
       y = "True Value",
       caption = "Source: TCMB")
ggplotly(scatter)
  
```

### Residual Analysis

```{r}
residuals <- lasso_preds %>% 
  mutate(Residual = CPI - pred) %>% 
  ggplot(aes(x = Date, y = Residual))+
  geom_point(size = 1, alpha = 0.8, color = "steelblue4")+
  geom_ribbon(stat='smooth', se=TRUE, alpha=0.01) +
  geom_line(stat='smooth', alpha=1, color = "darkred")+
  theme_pander() +
  labs(y = "Residual",
       x = "Date",
       title = "")+
  scale_y_continuous(labels = scales::percent)
ggplotly(residuals)


```


Tendency Surveys 
================================

Row     
-----------------------------------------------------------------------

### Inflation Expectations

```{r}
plot1 <- df %>% 
  ggplot(aes(x = Date, y = Inflation_Expectation))+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),size = 0.5, alpha = 0.75, show.legend = FALSE, , color = "steelblue4")+
  scale_x_date(date_breaks = "6 month", date_labels =  "%m/%y")+
  theme_pander()+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),stat='smooth', method = "loess", alpha=0.5, color = "firebrick2", formula = y ~ x)+
  geom_ribbon(stat='smooth',method = "loess", se=TRUE,formula = y ~ x, alpha=0.01)+
  labs(x = "Date",
       y = "Inflation Expectations (12-months ahead)")
ggplotly(plot1, tooltip = c("text"))
```


### Consumer Confidience Index

```{r}
plot2 <- df %>% 
  ggplot(aes(x = Date, y = Consumer_Confidience))+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),size = 0.5, alpha = 0.75, show.legend = FALSE, color = "steelblue4")+
  scale_x_date(date_breaks = "6 month", date_labels =  "%m/%y")+
  theme_pander()+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),stat='smooth', method = "loess", alpha=0.5, color = "firebrick2", formula = y ~ x) +
  geom_ribbon(stat='smooth',method = "loess", se=TRUE,formula = y ~ x, alpha=0.01)+
  labs(x = "Date",
       y = "Consumer Confidience Index")
ggplotly(plot2, tooltip = c("text"))
```


Row
-----------------------------------------------------------------------

### Financial Sector Confidience Index

```{r}
plot3 <- df %>% 
  ggplot(aes(x = Date, y = FS_Confidience))+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),size = 0.5, alpha = 0.75, show.legend = FALSE, color = "steelblue4")+
  scale_x_date(date_breaks = "6 month", date_labels =  "%m/%y")+
  theme_pander()+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )), stat='smooth', method = "loess", alpha=0.5, color = "firebrick2", formula = y ~ x)+
  geom_ribbon(stat='smooth',method = "loess", se=TRUE,formula = y ~ x, alpha=0.01)+
  labs(x = "Date",
       y = "Financial Sector Confidience Index")
ggplotly(plot3, tooltip = c("text"))
```

### Real Sector Confidience Index

```{r}
plot4 <- df %>% 
  ggplot(aes(x = Date, y = RS_Confidience))+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )), size = 0.5, alpha = 0.75, show.legend = FALSE, color = "steelblue4")+
  scale_x_date(date_breaks = "6 month", date_labels =  "%m/%y")+
  theme_pander()+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )), stat='smooth', method = "loess", alpha=0.5, color = "firebrick2", formula = y ~ x)+
  geom_ribbon(stat='smooth',method = "loess", se=TRUE,formula = y ~ x, alpha=0.01)+
  labs(x = "Date",
       y = "Real Sector Confidience Index")
ggplotly(plot4, tooltip = c("text"))
```


Production Statistics
================================

Row
-----------------------------------------------------------------------

### Composite Leading Indicator

```{r}
plot5 <- df %>% 
  ggplot(aes(x = Date, y = CLI))+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )), size = 0.5, alpha = 0.75, show.legend = FALSE, color = "steelblue4")+
  scale_x_date(date_breaks = "6 month", date_labels =  "%m/%y")+
  theme_pander()+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )), stat='smooth', method = "loess", alpha=0.5, color = "firebrick2", formula = y ~ x)+
  geom_ribbon(stat='smooth',method = "loess", se=TRUE,formula = y ~ x, alpha=0.01)+
  labs(x = "Date",
       y = "Composite Leading Indicator")
ggplotly(plot5, tooltip = c("text"))
```


### Export Orders

```{r}
plot6 <- df %>% 
  ggplot(aes(x = Date, y = Export_Orders))+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),size = 0.5, alpha = 0.75, show.legend = FALSE, color = "steelblue4")+
  scale_x_date(date_breaks = "6 month", date_labels =  "%m/%y")+
  theme_pander()+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),stat='smooth', method = "loess", alpha=0.5, color = "firebrick2", formula = y ~ x)+
  geom_ribbon(stat='smooth',method = "loess", se=TRUE,formula = y ~ x, alpha=0.01)+
  labs(x = "Date",
       y = "Export Orders")
ggplotly(plot6, tooltip = c("text"))
```

Row
-----------------------------------------------------------------------

### Production Volume

```{r}
plot7 <- df %>% 
  ggplot(aes(x = Date, y = Production_Volume))+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),size = 0.5, alpha = 0.75, show.legend = FALSE, color = "steelblue4")+
  scale_x_date(date_breaks = "6 month", date_labels =  "%m/%y")+
  theme_pander()+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),stat='smooth', method = "loess", alpha=0.5, color ="firebrick2", formula = y ~ x)+
  geom_ribbon(stat='smooth',method = "loess", se=TRUE,formula = y ~ x, alpha=0.01)+
  labs(x = "Date",
       y = "Production Volume")
ggplotly(plot7, tooltip = c("text"))
```

### Capacity Utilization Rate

```{r}
plot8 <- df %>% 
  ggplot(aes(x = Date, y = Utilization_Rate))+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),size = 0.5, alpha = 0.75, show.legend = FALSE, color = "steelblue4")+
  scale_x_date(date_breaks = "6 month", date_labels =  "%m/%y")+
  theme_pander()+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),stat='smooth', method = "loess", alpha=0.5, color = "firebrick2", formula = y ~ x)+
  geom_ribbon(stat='smooth',method = "loess", se=TRUE,formula = y ~ x, alpha=0.01)+
  labs(x = "Date",
       y = "Capacity Utilization Rate (%)")
ggplotly(plot8, tooltip = c("text"))
```


Balance of Payments 
================================

Row
-----------------------------------------------------------------------
### Average Import Price

```{r}
plot9 <- df %>% 
  ggplot(aes(x = Date, y = Average_Import_Price))+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),size = 0.5, alpha = 0.75, show.legend = FALSE, , color = "steelblue4")+
  scale_x_date(date_breaks = "6 month", date_labels =  "%m/%y")+
  theme_pander()+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),stat='smooth', method = "loess", alpha=0.5, color = "firebrick2", formula = y ~ x)+
  geom_ribbon(stat='smooth',method = "loess", se=TRUE,formula = y ~ x, alpha=0.01)+
  labs(x = "Date",
       y = "Average Import Price in USD")
ggplotly(plot9, tooltip = c("text"))
  
```

Row
-----------------------------------------------------------------------


### Balance of Payments

```{r}
plot10 <- df %>% 
  ggplot(aes(x = Date, y = BoP))+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),size = 0.5, alpha = 0.75, show.legend = FALSE, color = "steelblue4")+
  scale_x_date(date_breaks = "6 month", date_labels =  "%m/%y")+
  theme_pander()+
  geom_line(aes(text = paste(
    "Date: ", as.Date(..x.., origin = "1970-01-01"), "<br>",
    "Value:", round(..y..,1)
  )),stat='smooth', method = "loess", alpha=0.5, color = "firebrick2")+
  geom_ribbon(stat='smooth',method = "loess", se=TRUE, alpha = 0.01)+
  labs(x = "Date",
       y = "Balance of Payments")
ggplotly(plot10, tooltip = c("text"))
```


<!-- Seasonality Analysis -->
<!-- ================================ -->

<!-- Row {.tabset } -->
<!-- ----------------------------------------------------------------------- -->

<!-- ### Inflation -->
<!-- ```{r} -->
<!-- forecast_df %>% -->
<!--   plot_seasonal_diagnostics(.date_var = Date,  -->
<!--                             .value = CPI,  -->
<!--                             .geom_outlier_color = "darkred", -->
<!--                             .feature_set = c("month.lbl", "year")) -->
<!-- ``` -->

<!-- ### Balance of Payments -->
<!-- ```{r} -->
<!-- df %>% -->
<!--   plot_seasonal_diagnostics(.date_var = Date,  -->
<!--                             .value = BoP,  -->
<!--                             .geom_outlier_color = "darkred", -->
<!--                             .feature_set = c("month.lbl", "year")) -->
<!-- ``` -->

<!-- ### Export Orders -->
<!-- ```{r} -->
<!-- df %>% -->
<!--   plot_seasonal_diagnostics(.date_var = Date,  -->
<!--                             .value = Export_Orders,  -->
<!--                             .geom_outlier_color = "darkred", -->
<!--                             .feature_set = c("month.lbl", "year")) -->
<!-- ``` -->

<!-- ### Consumer Confidience -->
<!-- ```{r} -->
<!-- df %>% -->
<!--   plot_seasonal_diagnostics(.date_var = Date,  -->
<!--                             .value = Consumer_Confidience,  -->
<!--                             .geom_outlier_color = "darkred", -->
<!--                             .feature_set = c("month.lbl", "year")) -->
<!-- ``` -->

<!-- ### Real Sector Confidience -->
<!-- ```{r} -->
<!-- df %>% -->
<!--   plot_seasonal_diagnostics(.date_var = Date,  -->
<!--                             .value = RS_Confidience,  -->
<!--                             .geom_outlier_color = "darkred", -->
<!--                             .feature_set = c("month.lbl", "year")) -->
<!-- ``` -->

<!-- ### Financial Sector Confidience -->
<!-- ```{r} -->
<!-- df %>% -->
<!--   plot_seasonal_diagnostics(.date_var = Date,  -->
<!--                             .value = FS_Confidience,  -->
<!--                             .geom_outlier_color = "darkred", -->
<!--                             .feature_set = c("month.lbl", "year")) -->
<!-- ``` -->








