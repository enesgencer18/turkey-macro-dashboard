---
title: "Turkey Inflation Dashboard"
output: 
  flexdashboard::flex_dashboard:
    orientation: columns
    vertical_layout: fill
---

```{r setup, include=FALSE}
library(flexdashboard)
library(tidyverse)
library(ggplot2)
library(plotly)
library(ggthemes)
library(RColorBrewer)
```


```{r}
### Load Data
load("~/turkey-macro-dashboard/analysis/ml_data.Rdata")
load("~/turkey-macro-dashboard/df.Rda")
```

Column {.tabset}
-----------------------------------------------------------------------
### Ensemble Prediction
```{r}
n <- 2
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
inf_plot <- ensemble_preds %>% 
  rename(Actual = CPI,
         Forecasted = average_pred) %>% 
  gather(key = "Variable", value = "Value", Actual:Forecasted) %>% 
  ggplot(aes(x = Date, y = Value, color = Variable))+
  geom_line(size = 0.8, alpha = 1, show.legend = FALSE)+
  scale_color_calc()+
  theme_calc()+
  scale_y_continuous(labels = scales::percent)+
  scale_x_date(date_breaks = "3 month", date_labels =  "%m %Y")+
  labs(x = "Date",
       y = "",
       title = "One-month ahead inflation forecast",
       caption = "Source: TCMB")+
  theme(plot.title = element_text(face = "italic"))
  
  
ggplotly(inf_plot)
```

### LASSO

```{r}
inf_plot <- lasso_preds %>% 
  rename(Actual = CPI,
         Forecasted = pred) %>% 
  gather(key = "Variable", value = "Value", Actual:Forecasted) %>% 
  ggplot(aes(x = Date, y = Value, color = Variable))+
  geom_line(size = 0.8, alpha = 1, show.legend = FALSE)+
  scale_color_calc()+
  theme_calc()+
  scale_y_continuous(labels = scales::percent)+
  scale_x_date(date_breaks = "3 month", date_labels =  "%m %Y")+
  labs(x = "Date",
       y = "",
       title = "One-month ahead inflation forecast",
       caption = "Source: TCMB")+
  theme(plot.title = element_text(face = "italic"))
ggplotly(inf_plot)
```

### Random Forest
```{r}
inf_plot <- rf_preds %>% 
  rename(Actual = CPI,
         Forecasted = pred) %>% 
  gather(key = "Variable", value = "Value", Actual:Forecasted) %>% 
  ggplot(aes(x = Date, y = Value, color = Variable))+
  geom_line(size = 0.8, alpha = 1, show.legend = FALSE)+
  scale_color_calc()+
  theme_calc()+
  scale_y_continuous(labels = scales::percent)+
  scale_x_date(date_breaks = "3 month", date_labels =  "%m %Y")+
  labs(x = "Date",
       y = "",
       title = "One-month ahead inflation forecast",
       caption = "Source: TCMB")+
  theme(plot.title = element_text(face = "italic"))
ggplotly(inf_plot)

```



```{r}
#df %>%
  #plot_time_series(
    #.date_var = Date,
    #.value = Average_Import_Price*Usd_Try, 
    #.smooth = T, 
    #.smooth_alpha = 0.5, 
    #.smooth_size = 0.7, 
    #.smooth_color = "darkred", 
    #.legend_show = TRUE, 
    #.title = "Average"
  #)


```



```{r}
#df %>%
  #plot_seasonal_diagnostics(.date_var = Date, 
                            #.value = BoP, 
                            #.geom_outlier_color = "darkred", 
                            #.feature_set = "month.lbl")
```






